name: Benchmark

# We use environments to require approval to run benchmarks on PRs, but not on pushes to `main`
# (which have been approved already since PRs are required for `main`).
on:
  workflow_call:
    inputs:
      environment:
        type: string
      ref:
        required: true
        type: string

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always
  S3_BUCKET_NAME: s3-file-connector-github-test-bucket
  S3_BUCKET_TEST_PREFIX: read-only-mount-test/
  S3_BUCKET_BENCH_FILE: bench100GB.bin
  S3_BUCKET_SMALL_BENCH_FILE: bench5MB.bin
  # A bucket our IAM role has no access to, but is in the right region, for permissions tests
  S3_FORBIDDEN_BUCKET_NAME: s3-file-connector-github-test-bucket-forbidden
  S3_REGION: us-east-1

jobs:
  bench:
    name: Benchmark (Throughput)
    runs-on: self-hosted

    environment: ${{ inputs.environment }}

    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::360461222476:role/GitHub-Actions-Role
        aws-region: us-east-1
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: ${{ inputs.ref }}
        submodules: true
        persist-credentials: false
    - name: Set up stable Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    - name: Restore Cargo cache
      id: restore-cargo-cache
      uses: actions/cache/restore@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-${{ github.job }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Update package list
      run: sudo apt-get update
    - name: Install dependencies
      run: sudo apt-get -y install cmake libclang-dev libunwind-dev pkg-config jq fio
    - name: Install fuse
      run: sudo apt-get -y install fuse libfuse-dev
    - name: Configure fuse
      run: echo 'user_allow_other' | sudo tee -a /etc/fuse.conf
    - name: Build
      run: cargo build --release
    - name: Run Benchmark
      run: mountpoint-s3/scripts/fs_bench.sh
    - name: Save Cargo cache
      uses: actions/cache/save@v3
      if: inputs.environment != 'PR benchmarks'
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ steps.restore-cargo-cache.outputs.cache-primary-key }}
    - name: Check benchmark results
      uses: benchmark-action/github-action-benchmark@v1
      with:
        tool: 'customBiggerIsBetter'
        output-file-path: results/output.json
        alert-threshold: "200%"
        fail-on-alert: true
        # GitHub API token to make a commit comment
        github-token: ${{ secrets.GITHUB_TOKEN }}
        # Store the results and deploy GitHub pages automatically if the results are from main branch
        auto-push: ${{ inputs.environment && 'false' || 'true' }}
        comment-on-alert: true
        max-items-in-chart: 20
  
  latency-bench:
    name: Benchmark (Latency)
    runs-on: self-hosted

    environment: ${{ inputs.environment }}

    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::360461222476:role/GitHub-Actions-Role
        aws-region: us-east-1
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: ${{ inputs.ref }}
        submodules: true
        persist-credentials: false
    - name: Set up stable Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    - name: Restore Cargo cache
      id: restore-cargo-cache
      uses: actions/cache/restore@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-${{ github.job }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Update package list
      run: sudo apt-get update
    - name: Install dependencies
      run: sudo apt-get -y install cmake libclang-dev libunwind-dev pkg-config jq fio
    - name: Install fuse
      run: sudo apt-get -y install fuse libfuse-dev
    - name: Configure fuse
      run: echo 'user_allow_other' | sudo tee -a /etc/fuse.conf
    - name: Build
      run: cargo build --release
    - name: Run Benchmark
      run: mountpoint-s3/scripts/fs_latency_bench.sh
    - name: Save Cargo cache
      uses: actions/cache/save@v3
      if: inputs.environment != 'PR benchmarks'
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ steps.restore-cargo-cache.outputs.cache-primary-key }}
    - name: Check benchmark results
      uses: benchmark-action/github-action-benchmark@v1
      with:
        tool: 'customSmallerIsBetter'
        output-file-path: results/output.json
        benchmark-data-dir-path: dev/latency_bench
        alert-threshold: "200%"
        fail-on-alert: true
        # GitHub API token to make a commit comment
        github-token: ${{ secrets.GITHUB_TOKEN }}
        # Store the results and deploy GitHub pages automatically if the results are from main branch
        auto-push: ${{ inputs.environment && 'false' || 'true' }}
        comment-on-alert: true
        max-items-in-chart: 20
